{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMI8lzeiraCAcCGOPHWp4qd"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AZel6e9hV53I","executionInfo":{"status":"ok","timestamp":1755594350894,"user_tz":-330,"elapsed":88,"user":{"displayName":"BATHINA KEERTHIPRIYA,CSE(2022) Vel Tech, Chennai","userId":"12233765156633301629"}},"outputId":"c95e6e3f-a6c7-4685-d880-61f94964bb6d"},"outputs":[{"output_type":"stream","name":"stdout","text":["\n","==================================================\n","TASK 3: BELL STATES AND ENTANGLEMENT ENTROPY\n","==================================================\n","Bell state |Φ⁺⟩ = [0.70710678 0.         0.         0.70710678]\n","Bell state |Φ⁻⟩ = [ 0.70710678  0.          0.         -0.70710678]\n","Bell state |Ψ⁺⟩ = [0.         0.70710678 0.70710678 0.        ]\n","Bell state |Ψ⁻⟩ = [ 0.          0.70710678 -0.70710678  0.        ]\n","Entanglement entropy of |Φ⁺⟩: 1.0000\n","Entanglement entropy of |Φ⁻⟩: 1.0000\n","Entanglement entropy of |Ψ⁺⟩: 1.0000\n","Entanglement entropy of |Ψ⁻⟩: 1.0000\n","Entanglement entropy of |00⟩: 0.0000\n"]}],"source":["import numpy as np\n","from math import log2, sqrt\n","print(\"\\n\" + \"=\"*50)\n","print(\"TASK 3: BELL STATES AND ENTANGLEMENT ENTROPY\")\n","print(\"=\"*50)\n","\n","H = 1/sqrt(2) * np.array([[1, 1], [1, -1]])\n","I = np.eye(2)\n","CNOT = np.array([[1,0,0,0], [0,1,0,0], [0,0,0,1], [0,0,1,0]])\n","class BellStates:\n","    @staticmethod\n","    def phi_plus():\n","        \"\"\"Construct |Φ⁺⟩ = (|00⟩ + |11⟩)/√2\"\"\"\n","        state = np.kron([1, 0], [1, 0])\n","        state = np.kron(H, I) @ state\n","        return CNOT @ state\n","\n","    @staticmethod\n","    def phi_minus():\n","        \"\"\"Construct |Φ⁻⟩ = (|00⟩ - |11⟩)/√2\"\"\"\n","        state = np.kron([0, 1], [1, 0])\n","        state = np.kron(H, I) @ state\n","        return CNOT @ state\n","\n","    @staticmethod\n","    def psi_plus():\n","        \"\"\"Construct |Ψ⁺⟩ = (|01⟩ + |10⟩)/√2\"\"\"\n","        state = np.kron([1, 0], [0, 1])\n","        state = np.kron(H, I) @ state\n","        return CNOT @ state\n","\n","    @staticmethod\n","    def psi_minus():\n","        \"\"\"Construct |Ψ⁻⟩ = (|01⟩ - |10⟩)/√2\"\"\"\n","        state = np.kron([0, 1], [0, 1])\n","        state = np.kron(H, I) @ state\n","        return CNOT @ state\n","def partial_trace(rho, dims, axis=0):\n","    \"\"\"\n","    Compute partial trace of density matrix rho\n","    dims: list of dimensions of each subsystem [dA, dB]\n","    axis: 0 for tracing out B, 1 for tracing out A\n","    \"\"\"\n","    dA, dB = dims\n","    if axis == 0: # Trace out B\n","        rho_reduced = np.zeros((dA, dA), dtype=complex)\n","        for i in range(dA):\n","            for j in range(dA):\n","                for k in range(dB):\n","                    rho_reduced[i,j] += rho[i*dB + k, j*dB + k]\n","    else: # Trace out A\n","        rho_reduced = np.zeros((dB, dB), dtype=complex)\n","        for i in range(dB):\n","            for j in range(dB):\n","                for k in range(dA):\n","                    rho_reduced[i,j] += rho[k*dB + i, k*dB + j]\n","    return rho_reduced\n","def entanglement_entropy(state):\n","    \"\"\"\n","    Calculate entanglement entropy of bipartite state\n","    Input: state vector or density matrix\n","    Output: entanglement entropy\n","    \"\"\"\n","    if state.ndim == 1:\n","        rho = np.outer(state, state.conj())\n","    else:\n","        rho = state\n","\n","    rho_A = partial_trace(rho, [2, 2], axis=1)\n","\n","    eigvals = np.linalg.eigvalsh(rho_A)\n","\n","    entropy = 0.0\n","    for lamda in eigvals:\n","        if lamda > 1e-10:\n","            entropy -= lamda * log2(lamda)\n","\n","    return entropy\n","if __name__ == \"__main__\":\n","    phi_p = BellStates.phi_plus()\n","    phi_m = BellStates.phi_minus()\n","    psi_p = BellStates.psi_plus()\n","    psi_m = BellStates.psi_minus()\n","    print(f\"Bell state |Φ⁺⟩ =\", phi_p)\n","    print(f\"Bell state |Φ⁻⟩ =\", phi_m)\n","    print(f\"Bell state |Ψ⁺⟩ =\", psi_p)\n","    print(f\"Bell state |Ψ⁻⟩ =\", psi_m)\n","    print(f\"Entanglement entropy of |Φ⁺⟩: {entanglement_entropy(phi_p):.4f}\")\n","    print(f\"Entanglement entropy of |Φ⁻⟩: {entanglement_entropy(phi_m):.4f}\")\n","    print(f\"Entanglement entropy of |Ψ⁺⟩: {entanglement_entropy(psi_p):.4f}\")\n","    print(f\"Entanglement entropy of |Ψ⁻⟩: {entanglement_entropy(psi_m):.4f}\")\n","    product_state = np.kron([1, 0], [1, 0]) # |00⟩\n","    print(f\"Entanglement entropy of |00⟩: {entanglement_entropy(product_state):.4f}\")"]},{"cell_type":"code","source":["!pip install qiskit\n","!pip install qiskit_aer\n","from qiskit import QuantumCircuit\n","from qiskit.quantum_info import Statevector, partial_trace, entropy\n","from qiskit_aer import AerSimulator\n","import numpy as np\n","import pandas as pd\n","\n","# Initialize simulator\n","simulator = AerSimulator()\n","\n","def create_bell_state(bell_type):\n","    qc = QuantumCircuit(2)\n","    qc.h(0)\n","    qc.cx(0, 1)\n","    if bell_type == 'phi_minus':\n","        qc.z(0)\n","    elif bell_type == 'psi_plus':\n","        qc.x(1)\n","    elif bell_type == 'psi_minus':\n","        qc.z(0)\n","        qc.x(1)\n","    return qc\n","\n","def calculate_entropy(qc):\n","    statevector = Statevector.from_instruction(qc)\n","    rho = partial_trace(statevector, [1])\n","    return entropy(rho, base=2)\n","\n","state_data = []\n","states = {\n","    'phi_plus': '|Φ⁺⟩',\n","    'phi_minus': '|Φ⁻⟩',\n","    'psi_plus': '|Ψ⁺⟩',\n","    'psi_minus': '|Ψ⁻⟩',\n","    'product': '|00⟩'\n","}\n","\n","print(\"Bell States Construction and Entanglement Analysis\")\n","print(\"=\"*50)\n","\n","for key, label in states.items():\n","    if key == 'product':\n","        qc = QuantumCircuit(2)\n","        print(\"\\nProduct State:\")\n","    else:\n","        qc = create_bell_state(key)\n","        print(f\"\\nBell State {label}:\")\n","\n","    # Display circuit\n","    print(\"Quantum Circuit:\")\n","    print(qc)\n","\n","    # Calculate and display results\n","    entropy_val = calculate_entropy(qc)\n","    statevector = Statevector.from_instruction(qc)\n","\n","    print(\"\\nStatevector:\")\n","    print(np.round(statevector.data, 3))\n","\n","    print(f\"Entanglement Entropy: {round(entropy_val, 3)}\")\n","    print(\"-\"*40)\n","\n","    state_data.append({\n","        'State': label,\n","        'Entanglement Entropy': round(entropy_val, 3),\n","        'Score (out of 1)': f\"{round(entropy_val, 3)}/1\"\n","    })\n","\n","# Create and display summary table\n","print(\"\\nSummary Table:\")\n","print(\"=\"*50)\n","df = pd.DataFrame(state_data)\n","print(df.to_string(index=False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VE5oY7ruaz3R","executionInfo":{"status":"ok","timestamp":1755594375363,"user_tz":-330,"elapsed":24471,"user":{"displayName":"BATHINA KEERTHIPRIYA,CSE(2022) Vel Tech, Chennai","userId":"12233765156633301629"}},"outputId":"284e3da0-24b6-4944-ef30-db6608d85443"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting qiskit\n","  Downloading qiskit-2.1.1-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (12 kB)\n","Collecting rustworkx>=0.15.0 (from qiskit)\n","  Downloading rustworkx-0.17.1-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (10 kB)\n","Requirement already satisfied: numpy<3,>=1.17 in /usr/local/lib/python3.11/dist-packages (from qiskit) (2.0.2)\n","Requirement already satisfied: scipy>=1.5 in /usr/local/lib/python3.11/dist-packages (from qiskit) (1.16.1)\n","Requirement already satisfied: dill>=0.3 in /usr/local/lib/python3.11/dist-packages (from qiskit) (0.3.8)\n","Collecting stevedore>=3.0.0 (from qiskit)\n","  Downloading stevedore-5.4.1-py3-none-any.whl.metadata (2.3 kB)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.11/dist-packages (from qiskit) (4.14.1)\n","Collecting pbr>=2.0.0 (from stevedore>=3.0.0->qiskit)\n","  Downloading pbr-7.0.0-py2.py3-none-any.whl.metadata (1.4 kB)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.11/dist-packages (from pbr>=2.0.0->stevedore>=3.0.0->qiskit) (75.2.0)\n","Downloading qiskit-2.1.1-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.5/7.5 MB\u001b[0m \u001b[31m34.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading rustworkx-0.17.1-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.2 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.2/2.2 MB\u001b[0m \u001b[31m47.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading stevedore-5.4.1-py3-none-any.whl (49 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m49.5/49.5 kB\u001b[0m \u001b[31m3.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pbr-7.0.0-py2.py3-none-any.whl (125 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m125.1/125.1 kB\u001b[0m \u001b[31m7.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: rustworkx, pbr, stevedore, qiskit\n","Successfully installed pbr-7.0.0 qiskit-2.1.1 rustworkx-0.17.1 stevedore-5.4.1\n","Collecting qiskit_aer\n","  Downloading qiskit_aer-0.17.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (8.3 kB)\n","Requirement already satisfied: qiskit>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from qiskit_aer) (2.1.1)\n","Requirement already satisfied: numpy>=1.16.3 in /usr/local/lib/python3.11/dist-packages (from qiskit_aer) (2.0.2)\n","Requirement already satisfied: scipy>=1.0 in /usr/local/lib/python3.11/dist-packages (from qiskit_aer) (1.16.1)\n","Requirement already satisfied: psutil>=5 in /usr/local/lib/python3.11/dist-packages (from qiskit_aer) (5.9.5)\n","Requirement already satisfied: python-dateutil>=2.8.0 in /usr/local/lib/python3.11/dist-packages (from qiskit_aer) (2.9.0.post0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.0->qiskit_aer) (1.17.0)\n","Requirement already satisfied: rustworkx>=0.15.0 in /usr/local/lib/python3.11/dist-packages (from qiskit>=1.1.0->qiskit_aer) (0.17.1)\n","Requirement already satisfied: dill>=0.3 in /usr/local/lib/python3.11/dist-packages (from qiskit>=1.1.0->qiskit_aer) (0.3.8)\n","Requirement already satisfied: stevedore>=3.0.0 in /usr/local/lib/python3.11/dist-packages (from qiskit>=1.1.0->qiskit_aer) (5.4.1)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.11/dist-packages (from qiskit>=1.1.0->qiskit_aer) (4.14.1)\n","Requirement already satisfied: pbr>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from stevedore>=3.0.0->qiskit>=1.1.0->qiskit_aer) (7.0.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.11/dist-packages (from pbr>=2.0.0->stevedore>=3.0.0->qiskit>=1.1.0->qiskit_aer) (75.2.0)\n","Downloading qiskit_aer-0.17.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.4 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m12.4/12.4 MB\u001b[0m \u001b[31m100.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: qiskit_aer\n","Successfully installed qiskit_aer-0.17.1\n","Bell States Construction and Entanglement Analysis\n","==================================================\n","\n","Bell State |Φ⁺⟩:\n","Quantum Circuit:\n","     ┌───┐     \n","q_0: ┤ H ├──■──\n","     └───┘┌─┴─┐\n","q_1: ─────┤ X ├\n","          └───┘\n","\n","Statevector:\n","[0.707+0.j 0.   +0.j 0.   +0.j 0.707+0.j]\n","Entanglement Entropy: 1.0\n","----------------------------------------\n","\n","Bell State |Φ⁻⟩:\n","Quantum Circuit:\n","     ┌───┐     ┌───┐\n","q_0: ┤ H ├──■──┤ Z ├\n","     └───┘┌─┴─┐└───┘\n","q_1: ─────┤ X ├─────\n","          └───┘     \n","\n","Statevector:\n","[ 0.707+0.j  0.   +0.j  0.   +0.j -0.707+0.j]\n","Entanglement Entropy: 1.0\n","----------------------------------------\n","\n","Bell State |Ψ⁺⟩:\n","Quantum Circuit:\n","     ┌───┐          \n","q_0: ┤ H ├──■───────\n","     └───┘┌─┴─┐┌───┐\n","q_1: ─────┤ X ├┤ X ├\n","          └───┘└───┘\n","\n","Statevector:\n","[0.   +0.j 0.707+0.j 0.707+0.j 0.   +0.j]\n","Entanglement Entropy: 1.0\n","----------------------------------------\n","\n","Bell State |Ψ⁻⟩:\n","Quantum Circuit:\n","     ┌───┐     ┌───┐\n","q_0: ┤ H ├──■──┤ Z ├\n","     └───┘┌─┴─┐├───┤\n","q_1: ─────┤ X ├┤ X ├\n","          └───┘└───┘\n","\n","Statevector:\n","[ 0.   +0.j -0.707+0.j  0.707+0.j  0.   +0.j]\n","Entanglement Entropy: 1.0\n","----------------------------------------\n","\n","Product State:\n","Quantum Circuit:\n","     \n","q_0: \n","     \n","q_1: \n","     \n","\n","Statevector:\n","[1.+0.j 0.+0.j 0.+0.j 0.+0.j]\n","Entanglement Entropy: 0.0\n","----------------------------------------\n","\n","Summary Table:\n","==================================================\n","State  Entanglement Entropy Score (out of 1)\n"," |Φ⁺⟩                   1.0            1.0/1\n"," |Φ⁻⟩                   1.0            1.0/1\n"," |Ψ⁺⟩                   1.0            1.0/1\n"," |Ψ⁻⟩                   1.0            1.0/1\n"," |00⟩                   0.0            0.0/1\n"]}]}]}